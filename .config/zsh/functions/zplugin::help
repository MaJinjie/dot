#!/usr/bin/env zsh

local func_name=$1  func_args=${@:2}
local -A msg

function zsh-you-should-use() {
    msg[functions]="
    check_alias_usage [number]: check how often we use our aliases
    "
    msg[envs]="
    YSU_MESSAGE_POSITION [before | after]: aliases position 
    YSU_MODE [BESTMATCH | ALL]: display which aliases
    YSU_HARDCORE=1: enable Hardcore mode to enforce the use of aliases
    YSU_IGNORED_ALIASES <array>: permanently ignore certain aliases
    YSU_IGNORED_GLOBAL_ALIASES <array>: ignore global aliases
    "

}
function lax() {
    msg[briefs]="
    PATTERN: @[%%]<globset>[^SELECTOR[,SELECTOR]...|REGEX]
        SELECTOR: [-n..-1|1..n|'a'|'l'|/regex]
    GLOBSET: ? * {foo,...} not{1..2} [] [*]|\\* **/bar foo/** foo/**/bar **
        /**/    limit full path
        foo/**  limit sub path
    EXAMPLE:
        lax -P '@**/foo^a'
            ./foobar/foo/
            ./foobar/foo/foo
        @foo/*/bar != @foo/**/bar 
        @*/bar == @**/bar 
        @foo/* == @bar/**
        
    "
}

setopt
if (($# == 0)); then
    print_msg error "Params count is empty"
elif $func_name 2> /dev/null; then 
    local context
    for key val in "${(@kv)msg}"; do 
        if [[ -z $func_args || $func_args =~ $key ]]; then
            print -- ${(%):-"%F{3}==================================%f%F{4}%B $key %f%b%F{3}===================================%f"}
            print -lP -- ${${(f)${msg[$key]}}/    (#b)?(*:)(*)/%F{5}%B$match[1]%f%b%F{2}$match[2]%f}
        fi
    done
else
    print_msg error "Not $func_name program/plugin instructions"
fi



